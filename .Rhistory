df1 <- plate_map_concs
colnames(df1) <- c("well", "concentration")
df2 <- empty_24H
colnames(df2) <- c("well", "empty_response")
df3 <- cells_24H
colnames(df3) <- c("well", "response")
df4 <- merge(df1, df2, by = 'well')
df4 <- merge(df4, df3, by = 'well')
# Adjust the 'response' by subtracting the mean 'empty_response' for each 'concentration' group
df4 <- df4 %>%
group_by(concentration) %>%
mutate(adjusted_response = response - mean(empty_response))
# This is a script that will set an example to process data from the Tecan
# plate reader. An example is given in the form of some cytotox data.
# The resultant df can then be used for plotting.
data <- df4
str(data)
# Define the mappings
concentration_values <- c("VC" = 0, "C1" = 800, "C2" = 400, "C3" = 200, "C4" = 100, "C5" = 50, "C6" = 25, "C7" = 12.5, "C8" = 6.25)
# Replace concentration values
data$concentration <- ifelse(data$concentration %in% names(concentration_values),
concentration_values[data$concentration],
data$concentration)
data$concentration <- as.numeric(data$concentration)
data$adjusted_response <- as.numeric(data$adjusted_response)
str(data)
data_long <- data %>%
pivot_longer(
cols = c(response, empty_response, adjusted_response),
names_to = "response_type",
values_to = "response_value"
)
data_long %>%
group_by(response_type) %>%
do({
data <- .
data$response_value <- as.numeric(data$response_value)
data$response_value <- (data$response_value / mean(data$response_value[which(data$concentration == 0)])) * 100
anov_res <- aov_tukey(data)
# Create an ANOVA boxplot of the statistical data
title <- paste("THP-1_bleomycin_24H", data$response_type[1])
anov_plot(data, anov_res, title)
# Define the list of IC values you want plotted
IC_list <- c()
# Create a title for the graphs
title <- paste("THP-1_bleomycin_24H", data$response_type[1])
plot_curve(data, IC_list, title, log = FALSE)
data_L <- data
data_L$concentration[data_L$concentration == 0] <- 1.1
# Create a title for the graphs
title <- paste("THP-1_bleomycin_24H", data$response_type[1])
plot_curve(data_L, IC_list, title, log = TRUE)
})
View(data_long)
View(data)
View(data_long)
# A dose response curve analysis using the drc package to obtain
# and plot (inhibitory concentration) IC values e.g. IC50 which
# is the half maximal inhibitory concentration.
# Good link: https://rstudio-pubs-static.s3.amazonaws.com/378543_5b5bda32bf0541a485ccc49efbea680a.html
# Source the functions for plotting
source("plot_curve.R")
source("anova_tukeyHSD.R")
source("anov_plot.R")
# Load required libraries
library(multcompView)
library(drc)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(readr)
library(plater)
load("plate_map.Rdata")
empty_24H <- read_plate("empty_24H.csv")
colnames(empty_24H) <- c("well", "response")
empty_24H$well <- sub("([A-Za-z])(0)([1-9])", "\\1\\3", empty_24H$well)
cells_24H <- read_plate("cells_24H.csv")
colnames(cells_24H) <- c("well", "response")
cells_24H$well <- sub("([A-Za-z])(0)([1-9])", "\\1\\3", cells_24H$well)
df1 <- plate_map_concs
colnames(df1) <- c("well", "concentration")
df2 <- empty_24H
colnames(df2) <- c("well", "empty_response")
df3 <- cells_24H
colnames(df3) <- c("well", "response")
df4 <- merge(df1, df2, by = 'well')
df4 <- merge(df4, df3, by = 'well')
# Adjust the 'response' by subtracting the mean 'empty_response' for each 'concentration' group
df4 <- df4 %>%
group_by(concentration) %>%
mutate(adjusted_response = response - mean(empty_response))
# This is a script that will set an example to process data from the Tecan
# plate reader. An example is given in the form of some cytotox data.
# The resultant df can then be used for plotting.
data <- df4
str(data)
# Define the mappings
concentration_values <- c("VC" = 0, "C1" = 800, "C2" = 400, "C3" = 200, "C4" = 100, "C5" = 50, "C6" = 25, "C7" = 12.5, "C8" = 6.25)
# Replace concentration values
data$concentration <- ifelse(data$concentration %in% names(concentration_values),
concentration_values[data$concentration],
data$concentration)
data$concentration <- as.numeric(data$concentration)
data$adjusted_response <- as.numeric(data$adjusted_response)
str(data)
data_long <- data %>%
pivot_longer(
cols = c(response, empty_response, adjusted_response),
names_to = "response_type",
values_to = "response_value"
)
data_long %>%
group_by(response_type) %>%
do({
data <- .
data$response_value <- as.numeric(data$response_value)
data$response_value <- (data$response_value / mean(data$response_value[which(data$concentration == 0)])) * 100
anov_res <- aov_tukey(data)
# Create an ANOVA boxplot of the statistical data
title <- paste("THP-1_bleomycin_24H", data$response_type[1])
anov_plot(data, anov_res, title)
# Define the list of IC values you want plotted
IC_list <- c()
# Create a title for the graphs
title <- paste("THP-1_bleomycin_24H", data$response_type[1])
plot_curve(data, IC_list, title, log = FALSE)
data_L <- data
data_L$concentration[data_L$concentration == 0] <- 1.1
# Create a title for the graphs
title <- paste("THP-1_bleomycin_24H", data$response_type[1])
plot_curve(data_L, IC_list, title, log = TRUE)
})
View(data_long)
# Source the functions for plotting
source("plot_curve.R")
source("anova_tukeyHSD.R")
source("anov_plot.R")
# Load required libraries
library(multcompView)
library(drc)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(readr)
library(plater)
load("plate_map.Rdata")
empty_24H <- read_plate("empty_24H.csv")
colnames(empty_24H) <- c("well", "response")
empty_24H$well <- sub("([A-Za-z])(0)([1-9])", "\\1\\3", empty_24H$well)
cells_24H <- read_plate("cells_24H.csv")
colnames(cells_24H) <- c("well", "response")
cells_24H$well <- sub("([A-Za-z])(0)([1-9])", "\\1\\3", cells_24H$well)
empty_48H <- read_plate("empty_48H.csv")
colnames(empty_48H) <- c("well", "response")
empty_48H$well <- sub("([A-Za-z])(0)([1-9])", "\\1\\3", empty_48H$well)
cells_48H <- read_plate("cells_48H.csv")
colnames(cells_48H) <- c("well", "response")
cells_48H$well <- sub("([A-Za-z])(0)([1-9])", "\\1\\3", cells_48H$well)
df1 <- plate_map_concs
colnames(df1) <- c("well", "concentration")
df2 <- empty_24H
colnames(df2) <- c("well", "empty_response")
df3 <- cells_24H
colnames(df3) <- c("well", "response")
df4 <- empty_48H
colnames(df4) <- c("well", "empty_response")
df5 <- cells_48H
colnames(df5) <- c("well", "response")
View(df5)
df6 <- merge(df1, df2, by = 'well')
df6 <- merge(df6, df3, by = 'well')
df6 <- merge(df6, df4, by = 'well')
df6 <- merge(df6, df5, by = 'well')
View(df6)
df1 <- plate_map_concs
colnames(df1) <- c("well", "concentration")
df2 <- empty_24H
colnames(df2) <- c("well", "empty_24H")
df3 <- cells_24H
colnames(df3) <- c("well", "24H")
df4 <- empty_48H
colnames(df4) <- c("well", "empty_48H")
df5 <- cells_48H
colnames(df5) <- c("well", "48H")
df6 <- merge(df1, df2, by = 'well')
df6 <- merge(df6, df3, by = 'well')
df6 <- merge(df6, df4, by = 'well')
df6 <- merge(df6, df5, by = 'well')
# Adjust the 'response' by subtracting the mean 'empty_response' for each 'concentration' group
df7 <- df6 %>%
group_by(concentration) %>%
mutate(adjusted_response = response - mean(empty_response))
# This is a script that will set an example to process data from the Tecan
# plate reader. An example is given in the form of some cytotox data.
# The resultant df can then be used for plotting.
data <- df6
str(data)
# Define the mappings
concentration_values <- c("VC" = 0, "C1" = 800, "C2" = 400, "C3" = 200, "C4" = 100, "C5" = 50, "C6" = 25, "C7" = 12.5, "C8" = 6.25)
# Replace concentration values
data$concentration <- ifelse(data$concentration %in% names(concentration_values),
concentration_values[data$concentration],
data$concentration)
data$concentration <- as.numeric(data$concentration)
data$adjusted_response <- as.numeric(data$adjusted_response)
str(data)
data_long <- data %>%
pivot_longer(
cols = c(response, empty_response, adjusted_response),
names_to = "response_type",
values_to = "response_value"
)
View(data_long)
View(data)
data_long <- data %>%
pivot_longer(
cols = 3:ncol(data),
names_to = "response_type",
values_to = "response_value"
)
View(data_long)
data_long %>%
group_by(response_type) %>%
do({
data <- .
data$response_value <- as.numeric(data$response_value)
print(data$response_type[1])
data$response_value <- (data$response_value / mean(data$response_value[which(data$concentration == 0)])) * 100
anov_res <- aov_tukey(data)
# Create an ANOVA boxplot of the statistical data
title <- paste("THP-1_bleomycin_24H", data$response_type[1])
anov_plot(data, anov_res, title)
# Define the list of IC values you want plotted
IC_list <- c(20, 50)
# Create a title for the graphs
title <- paste("THP-1_bleomycin_24H", data$response_type[1])
plot_curve(data, IC_list, title, log = FALSE)
data_L <- data
data_L$concentration[data_L$concentration == 0] <- 1.1
# Create a title for the graphs
title <- paste("THP-1_bleomycin_24H", data$response_type[1])
plot_curve(data_L, IC_list, title, log = TRUE)
})
plot_curve(data_L, IC_list, title, log = FALSE)
data_long %>%
group_by(response_type) %>%
do({
data <- .
data$response_value <- as.numeric(data$response_value)
print(data$response_type[1])
data$response_value <- (data$response_value / mean(data$response_value[which(data$concentration == 0)])) * 100
anov_res <- aov_tukey(data)
# Create an ANOVA boxplot of the statistical data
title <- paste("THP-1_bleomycin", data$response_type[1])
anov_plot(data, anov_res, title)
# Define the list of IC values you want plotted
IC_list <- c(20, 50)
# Create a title for the graphs
title <- paste("THP-1_bleomycin", data$response_type[1])
plot_curve(data, IC_list, title, log = FALSE)
data_L <- data
data_L$concentration[data_L$concentration == 0] <- 1.1
# Create a title for the graphs
title <- paste("THP-1_bleomycin", data$response_type[1])
plot_curve(data_L, IC_list, title, log = FALSE)
})
plot_curve <- function(data, IC_list, title, log = FALSE){
if(log){
dat_log2 <- data
dat_log2$concentration <- log2(dat_log2$concentration)
pl_data <- dat_log2
# Fit a four parameter logistic model to the data
fit <- drm(response_value ~ concentration, data=dat_log2, fct=LL.3())
}else{
pl_data <- data
# Fit a four parameter logistic model to the data
fit <- drm(response_value ~ concentration, data=data, fct=LL.3())
}
# Extract the parameter estimates
params <- coef(fit)
print(summary(fit))
# Calculate the IC10, IC20 and IC50 inhibitory concentration values
# Equation: ECn = ((n/(100-n))^(1/params[1]))*(params[4])
# Create an empty vector to store the calculated IC values
IC_values <- vector()
# Calculate the IC values in the loop
for (i in IC_list) {
IC_values <- c(IC_values, ((i/(100-i))^(1/params[1]))*(params[4]))
}
print("IC_values:")
print(IC_values)
if(log){
logRev <- 2^IC_values
print("Log Reverted IC_values:")
print(logRev)
}
# Create a dataframe for plotting
plot_data <- data.frame(concentration = seq(min(pl_data$concentration), max(pl_data$concentration), length.out = 100),
response_value = predict(fit, newdata = data.frame(concentration = seq(min(pl_data$concentration), max(pl_data$concentration), length.out = 100))))
# Plot the data and the model
p1 <- ggplot() +
geom_point(data = pl_data, aes(x = concentration, y = response_value), color = "purple") +
geom_line(data = plot_data, aes(x = concentration, y = response_value), size = 1.5) +
geom_vline(xintercept = IC_values, color = "blue", size = 1) +
xlab("Concentration") +
ylab("Response") +
theme(panel.background = element_blank(),
axis.line = element_line(colour = "black", size = 1),
axis.text = element_text(size = 20, face = "bold"),
axis.title = element_text(size = 20),
plot.title = element_text(size = 20)) +
ggtitle(title)+
ylim(0, max(pl_data$response_value))
print(p1)
# Calculate mean response and standard deviation at each concentration
mean_sd_data <- aggregate(response_value ~ concentration, pl_data, FUN = function(x) c(mean = mean(x), sd = sd(x)))
mean_sd_data <- do.call(data.frame, mean_sd_data)
names(mean_sd_data) <- c("concentration", "response_mean", "response_sd")
p2 <-  ggplot(pl_data, aes(x = concentration, y = response_mean)) +
geom_line(data = plot_data, aes(x = concentration, y = response_value), size = 1.5) +
geom_vline(xintercept = IC_values, color = "blue", size = 1) +
xlab("Concentration") +
ylab("Response") +
geom_errorbar(data = mean_sd_data, aes(x = concentration, ymin = response_mean - response_sd, ymax = response_mean + response_sd), size = 1) +
geom_point(data = mean_sd_data, aes(x = concentration, y = response_mean), color = "purple", size = 5) +
theme(panel.background = element_blank(),
axis.line = element_line(colour = "black", size = 1),
axis.text = element_text(size = 20, face = "bold"),
axis.title = element_text(size = 20),
plot.title = element_text(size = 20)) +
ggtitle(title)+
ylim(0, max(pl_data$response_value))
print(p2)
}
# A dose response curve analysis using the drc package to obtain
# and plot (inhibitory concentration) IC values e.g. IC50 which
# is the half maximal inhibitory concentration.
# Good link: https://rstudio-pubs-static.s3.amazonaws.com/378543_5b5bda32bf0541a485ccc49efbea680a.html
# Source the functions for plotting
source("plot_curve.R")
source("anova_tukeyHSD.R")
source("anov_plot.R")
# Load required libraries
library(multcompView)
library(drc)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(readr)
library(plater)
load("plate_map.Rdata")
empty_24H <- read_plate("empty_24H.csv")
colnames(empty_24H) <- c("well", "response")
empty_24H$well <- sub("([A-Za-z])(0)([1-9])", "\\1\\3", empty_24H$well)
cells_24H <- read_plate("cells_24H.csv")
colnames(cells_24H) <- c("well", "response")
cells_24H$well <- sub("([A-Za-z])(0)([1-9])", "\\1\\3", cells_24H$well)
empty_48H <- read_plate("empty_48H.csv")
colnames(empty_48H) <- c("well", "response")
empty_48H$well <- sub("([A-Za-z])(0)([1-9])", "\\1\\3", empty_48H$well)
cells_48H <- read_plate("cells_48H.csv")
colnames(cells_48H) <- c("well", "response")
cells_48H$well <- sub("([A-Za-z])(0)([1-9])", "\\1\\3", cells_48H$well)
df1 <- plate_map_concs
colnames(df1) <- c("well", "concentration")
df2 <- empty_24H
colnames(df2) <- c("well", "empty_24H")
df3 <- cells_24H
colnames(df3) <- c("well", "24H")
df4 <- empty_48H
colnames(df4) <- c("well", "empty_48H")
df5 <- cells_48H
colnames(df5) <- c("well", "48H")
df6 <- merge(df1, df2, by = 'well')
df6 <- merge(df6, df3, by = 'well')
df6 <- merge(df6, df4, by = 'well')
df6 <- merge(df6, df5, by = 'well')
# # Example: Adjust the 'response' by subtracting the mean 'empty_response' for each 'concentration' group if needed
# df <- df %>%
#   group_by(concentration) %>%
#   mutate(adjusted_response = response - mean(empty_response))
# This is a script that will set an example to process data from the Tecan
# plate reader. An example is given in the form of some cytotox data.
# The resultant df can then be used for plotting.
data <- df6
str(data)
# Define the mappings
concentration_values <- c("VC" = 0, "C1" = 800, "C2" = 400, "C3" = 200, "C4" = 100, "C5" = 50, "C6" = 25, "C7" = 12.5, "C8" = 6.25)
# Replace concentration values
data$concentration <- ifelse(data$concentration %in% names(concentration_values),
concentration_values[data$concentration],
data$concentration)
data$concentration <- as.numeric(data$concentration)
data$adjusted_response <- as.numeric(data$adjusted_response)
str(data)
data_long <- data %>%
pivot_longer(
cols = 3:ncol(data),
names_to = "response_type",
values_to = "response_value"
)
data_long %>%
group_by(response_type) %>%
do({
data <- .
data$response_value <- as.numeric(data$response_value)
print(data$response_type[1])
data$response_value <- (data$response_value / mean(data$response_value[which(data$concentration == 0)])) * 100
anov_res <- aov_tukey(data)
# Create an ANOVA boxplot of the statistical data
title <- paste("THP-1_bleomycin", data$response_type[1])
anov_plot(data, anov_res, title)
# Define the list of IC values you want plotted
IC_list <- c(20, 50)
# Create a title for the graphs
title <- paste("THP-1_bleomycin", data$response_type[1])
plot_curve(data, IC_list, title, log = FALSE)
data_L <- data
data_L$concentration[data_L$concentration == 0] <- 1.1
# Create a title for the graphs
title <- paste("THP-1_bleomycin", data$response_type[1])
plot_curve(data_L, IC_list, title, log = FALSE)
})
# A dose response curve analysis using the drc package to obtain
# and plot (inhibitory concentration) IC values e.g. IC50 which
# is the half maximal inhibitory concentration.
# Good link: https://rstudio-pubs-static.s3.amazonaws.com/378543_5b5bda32bf0541a485ccc49efbea680a.html
# Source the functions for plotting
source("plot_curve.R")
source("anova_tukeyHSD.R")
source("anov_plot.R")
# Load required libraries
library(multcompView)
library(drc)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(readr)
library(plater)
load("plate_map.Rdata")
empty_24H <- read_plate("empty_24H.csv")
colnames(empty_24H) <- c("well", "response")
empty_24H$well <- sub("([A-Za-z])(0)([1-9])", "\\1\\3", empty_24H$well)
cells_24H <- read_plate("cells_24H.csv")
colnames(cells_24H) <- c("well", "response")
cells_24H$well <- sub("([A-Za-z])(0)([1-9])", "\\1\\3", cells_24H$well)
empty_48H <- read_plate("empty_48H.csv")
colnames(empty_48H) <- c("well", "response")
empty_48H$well <- sub("([A-Za-z])(0)([1-9])", "\\1\\3", empty_48H$well)
cells_48H <- read_plate("cells_48H.csv")
colnames(cells_48H) <- c("well", "response")
cells_48H$well <- sub("([A-Za-z])(0)([1-9])", "\\1\\3", cells_48H$well)
df1 <- plate_map_concs
colnames(df1) <- c("well", "concentration")
df2 <- empty_24H
colnames(df2) <- c("well", "empty_24H")
df3 <- cells_24H
colnames(df3) <- c("well", "24H")
df4 <- empty_48H
colnames(df4) <- c("well", "empty_48H")
df5 <- cells_48H
colnames(df5) <- c("well", "48H")
df6 <- merge(df1, df2, by = 'well')
df6 <- merge(df6, df3, by = 'well')
df6 <- merge(df6, df4, by = 'well')
df6 <- merge(df6, df5, by = 'well')
# # Example: Adjust the 'response' by subtracting the mean 'empty_response' for each 'concentration' group if needed
# df <- df %>%
#   group_by(concentration) %>%
#   mutate(adjusted_response = response - mean(empty_response))
# This is a script that will set an example to process data from the Tecan
# plate reader. An example is given in the form of some cytotox data.
# The resultant df can then be used for plotting.
data <- df6
str(data)
# Define the mappings
concentration_values <- c("VC" = 0, "C1" = 800, "C2" = 400, "C3" = 200, "C4" = 100, "C5" = 50, "C6" = 25, "C7" = 12.5, "C8" = 6.25)
# Replace concentration values
data$concentration <- ifelse(data$concentration %in% names(concentration_values),
concentration_values[data$concentration],
data$concentration)
data$concentration <- as.numeric(data$concentration)
data$adjusted_response <- as.numeric(data$adjusted_response)
str(data)
data_long <- data %>%
pivot_longer(
cols = 3:ncol(data),
names_to = "response_type",
values_to = "response_value"
)
data_long %>%
group_by(response_type) %>%
do({
data <- .
data$response_value <- as.numeric(data$response_value)
print(data$response_type[1])
data$response_value <- (data$response_value / mean(data$response_value[which(data$concentration == 0)])) * 100
anov_res <- aov_tukey(data)
# Create an ANOVA boxplot of the statistical data
title <- paste("THP-1_bleomycin", data$response_type[1])
anov_plot(data, anov_res, title)
# Define the list of IC values you want plotted
IC_list <- c(20, 50)
# Create a title for the graphs
title <- paste("THP-1_bleomycin", data$response_type[1])
plot_curve(data, IC_list, title, log = FALSE)
data_L <- data
data_L$concentration[data_L$concentration == 0] <- 1.1
# Create a title for the graphs
title <- paste("THP-1_bleomycin", data$response_type[1])
plot_curve(data_L, IC_list, title, log = FALSE)
})
